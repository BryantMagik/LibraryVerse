//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Table User {
  id String [pk]
  name String
  lastName String
  nickName String
  dateOfBirth String
  country Country
  email String [unique, not null]
  image String
  emailVerified DateTime
  password String
  role UserRole [not null, default: 'USER']
  createdAt DateTime [default: `now()`, not null]
  isTwoFactorEnabled Boolean [not null, default: false]
  accounts Account [not null]
  authoredBooks Book [not null]
  twoFactorConfirmation TwoFactorConfirmation
  bookshelf UserBook [not null]
  chapterStatuses UserChapterStatus [not null]
  chapters Chapter [not null]
}

Table Account {
  id String [pk]
  userId String [not null]
  type String [not null]
  provider String [not null]
  providerAccountId String [not null]
  refresh_token String
  access_token String
  expires_at Int
  token_type String
  scope String
  id_token String
  session_state String
  user User [not null]

  indexes {
    (provider, providerAccountId) [unique]
  }
}

Table VerificationToken {
  id String [pk]
  email String [not null]
  token String [unique, not null]
  expires DateTime [not null]

  indexes {
    (email, token) [unique]
  }
}

Table PasswordResetToken {
  id String [pk]
  email String [not null]
  token String [unique, not null]
  expires DateTime [not null]

  indexes {
    (email, token) [unique]
  }
}

Table TwoFactorToken {
  id String [pk]
  email String [not null]
  token String [unique, not null]
  expires DateTime [not null]

  indexes {
    (email, token) [unique]
  }
}

Table TwoFactorConfirmation {
  id String [pk]
  userId String [unique, not null]
  user User [not null]
}

Table Book {
  id String [pk]
  title String [not null]
  description String [not null]
  coverImage String
  genre Genre
  tags String[] [not null]
  status BookStatus [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  authorId String [not null]
  author User [not null]
  chapters Chapter [not null]
  bookshelfOwners UserBook [not null]
}

Table UserBook {
  userId String [not null]
  bookId String [not null]
  addedAt DateTime [default: `now()`, not null]
  book Book [not null]
  user User [not null]

  indexes {
    (userId, bookId) [pk]
  }
}

Table UserChapterStatus {
  userId String [not null]
  chapterId String [not null]
  status ChapterUserStatus [not null]
  user User [not null]
  chapter Chapter [not null]

  indexes {
    (userId, chapterId) [pk]
  }
}

Table Chapter {
  id String [pk]
  title String [not null]
  content String [not null]
  status ChapterStatus [not null]
  order String [not null]
  bookId String [not null]
  userId String [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  book Book [not null]
  user User [not null]
  userStatuses UserChapterStatus [not null]

  indexes {
    (bookId, order) [unique]
  }
}

Enum ChapterUserStatus {
  READ
  UNREAD
}

Enum ChapterStatus {
  DRAFT
  PUBLISHED
  PAUSED
}

Enum UserRole {
  ADMIN
  USER
}

Enum Genre {
  FICTION
  NONFICTION
  MYSTERY
  FANTASY
  SCIFI
  ROMANCE
  HORROR
  BIOGRAPHY
  HISTORY
  POETRY
  OTHER
  ADVENTURE
  CHILDREN
  THRILLER
  CRIME
  DRAMA
  COMEDY
  ACTION
  SELF_HELP
  ART
  COOKING
  JUVENILE_NONFICTION
  POLITICAL_SCIENCE
  GRIEF
  LITERARY_CRITICISM
  FAMILY_RELATIONSHIPS
  COMPUTERS
  BIOGRAPHY_AUTOBIOGRAPHY
  YOUNG_ADULT_FICTION
}

Enum Country {
  ARGENTINA
  BOLIVIA
  CHILE
  COLOMBIA
  COSTA_RICA
  CUBA
  ECUADOR
  EL_SALVADOR
  SPAIN
  GUATEMALA
  HONDURAS
  MEXICO
  NICARAGUA
  PANAMA
  PARAGUAY
  PERU
  PUERTO_RICO
  DOMINICAN_REPUBLIC
  URUGUAY
  VENEZUELA
  UNITED_STATES
  CANADA
  UNITED_KINGDOM
  AUSTRALIA
  FRANCE
  GERMANY
  ITALY
  JAPAN
  CHINA
  INDIA
  BRAZIL
  RUSSIA
  SOUTH_AFRICA
}

Enum BookStatus {
  DRAFT
  PUBLISHED
  PAUSED
}

Ref: Account.userId > User.id [delete: Cascade]

Ref: TwoFactorConfirmation.userId - User.id [delete: Cascade]

Ref: Book.authorId > User.id

Ref: UserBook.bookId > Book.id

Ref: UserBook.userId > User.id

Ref: UserChapterStatus.userId > User.id [delete: Cascade]

Ref: UserChapterStatus.chapterId > Chapter.id [delete: Cascade]

Ref: Chapter.bookId > Book.id

Ref: Chapter.userId > User.id